#+TITLE: My .zshrc file
#+STARTUP: content
#+PROPERTY: header-args:sh :results output silent :tangle ~/.zshrc


* Install
#+BEGIN_SRC sh
  # Install ZSH if not installed
  if [ ! -f $HOME/.oh-my-zsh/oh-my-zsh.sh ]; then
      sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  fi

  #export PATH=/opt/local/bin/:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/opt/X11/bin
  export ZSH="$HOME/.oh-my-zsh"

  source $ZSH/oh-my-zsh.sh
  source $HOME/.zprofile
#+end_src


* Emacs/Vterm Setup
#+begin_src sh
  ## Emacs / Vterm integration
  vterm_printf(){
      if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
          # Tell tmux to pass the escape sequences through
          printf "\ePtmux;\e\e]%s\007\e\\" "$1"
      elif [ "${TERM%%-*}" = "screen" ]; then
          # GNU screen (screen, screen-256color, screen-256color-bce)
          printf "\eP\e]%s\007\e\\" "$1"
      else
          printf "\e]%s\e\\" "$1"
      fi
  }

  if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
      alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
  fi

  autoload -U add-zsh-hook
  add-zsh-hook -Uz chpwd (){ print -Pn "\e]2;%m:%2~\a" }

  vterm_prompt_end() {
      vterm_printf "51;A$(whoami)@$(hostname):$(pwd)";
  }
  setopt PROMPT_SUBST
  PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'

  vterm_cmd() {
      local vterm_elisp
      vterm_elisp=""
      while [ $# -gt 0 ]; do
          vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
          shift
      done
      vterm_printf "51;E$vterm_elisp"
  }

  find_file() {
      vterm_cmd find-file "$(realpath "${@:-.}")"
  }
  open_file_below() {
      vterm_cmd find-file-below "$(realpath "${@:-.}")"
  }
  say() {
      vterm_cmd message "%s" "$*"
  }

  LS_COLORS=$LS_COLORS:'ow=1;34:' ; export LS_COLORS

#+end_src
